(function(f){"function"===typeof define&&define.amd?define(["jquery"],f):"object"===typeof exports?f(require("jquery")):f(jQuery)})(function(f){window.xmlJsonClass={xml2json:function(a,c){9===a.nodeType&&(a=a.documentElement);var e=this.removeWhite(a),e=this.toObj(e),e=this.toJson(e,a.nodeName,"\t");return"{\n"+c+(c?e.replace(/\t/g,c):e.replace(/\t|\n/g,""))+"\n}"},json2xml:function(a,c){var e=function(b,a,c){var d="",h,g,f;if(b instanceof Array)if(0===b.length)d+=c+"<"+a+">__EMPTY_ARRAY_</"+a+">\n";
else for(h=0,g=b.length;h<g;h+=1)f=c+e(b[h],a,c+"\t")+"\n",d+=f;else if("object"===typeof b){h=!1;d+=c+"<"+a;for(g in b)b.hasOwnProperty(g)&&("@"===g.charAt(0)?d+=" "+g.substr(1)+'="'+b[g].toString()+'"':h=!0);d+=h?">":"/>";if(h){for(g in b)b.hasOwnProperty(g)&&("#text"===g?d+=b[g]:"#cdata"===g?d+="<![CDATA["+b[g]+"]]\x3e":"@"!==g.charAt(0)&&(d+=e(b[g],g,c+"\t")));d+=("\n"===d.charAt(d.length-1)?c:"")+"</"+a+">"}}else"function"===typeof b?d+=c+"<"+a+"><![CDATA["+b+"]]\x3e</"+a+">":(void 0===b&&(b=
""),d='""'===b.toString()||0===b.toString().length?d+(c+"<"+a+">__EMPTY_STRING_</"+a+">"):d+(c+"<"+a+">"+b.toString()+"</"+a+">"));return d},b="",d;for(d in a)a.hasOwnProperty(d)&&(b+=e(a[d],d,""));return c?b.replace(/\t/g,c):b.replace(/\t|\n/g,"")},toObj:function(a){var c={},e=/function/i,b,d=0,k=0,n=!1;if(1===a.nodeType){if(a.attributes.length)for(b=0;b<a.attributes.length;b+=1)c["@"+a.attributes[b].nodeName]=(a.attributes[b].nodeValue||"").toString();if(a.firstChild){for(b=a.firstChild;b;b=b.nextSibling)1===
b.nodeType?n=!0:3===b.nodeType&&b.nodeValue.match(/[^ \f\n\r\t\v]/)?d+=1:4===b.nodeType&&(k+=1);if(n)if(2>d&&2>k)for(this.removeWhite(a),b=a.firstChild;b;b=b.nextSibling)3===b.nodeType?c["#text"]=this.escape(b.nodeValue):4===b.nodeType?e.test(b.nodeValue)?c[b.nodeName]=[c[b.nodeName],b.nodeValue]:c["#cdata"]=this.escape(b.nodeValue):c[b.nodeName]?c[b.nodeName]instanceof Array?c[b.nodeName][c[b.nodeName].length]=this.toObj(b):c[b.nodeName]=[c[b.nodeName],this.toObj(b)]:c[b.nodeName]=this.toObj(b);
else a.attributes.length?c["#text"]=this.escape(this.innerXml(a)):c=this.escape(this.innerXml(a));else if(d)a.attributes.length?c["#text"]=this.escape(this.innerXml(a)):(c=this.escape(this.innerXml(a)),"__EMPTY_ARRAY_"===c?c="[]":"__EMPTY_STRING_"===c&&(c=""));else if(k)if(1<k)c=this.escape(this.innerXml(a));else for(b=a.firstChild;b;b=b.nextSibling){if(e.test(a.firstChild.nodeValue)){c=a.firstChild.nodeValue;break}c["#cdata"]=this.escape(b.nodeValue)}}a.attributes.length||a.firstChild||(c=null)}else 9===
a.nodeType?c=this.toObj(a.documentElement):(null!=f.jgrid&&null!=f.jgrid.defaults&&f.isFunction(f.jgrid.defaults.fatalError)?f.jgrid.defaults.fatalError:alert)("unhandled node type: "+a.nodeType);return c},toJson:function(a,c,e,b){void 0===b&&(b=!0);var d=c?'"'+c+'"':"",k="\t",f="\n",m,l,h=[];m=[];b||(f=k="");if("[]"===a)d+=c?":[]":"[]";else if(a instanceof Array){l=0;for(m=a.length;l<m;l+=1)h[l]=this.toJson(a[l],"",e+k,b);d+=(c?":[":"[")+(1<h.length?f+e+k+h.join(","+f+e+k)+f+e:h.join(""))+"]"}else if(null===
a)d+=(c&&":")+"null";else if("object"===typeof a){for(l in a)a.hasOwnProperty(l)&&(m[m.length]=this.toJson(a[l],l,e+k,b));d+=(c?":{":"{")+(1<m.length?f+e+k+m.join(","+f+e+k)+f+e:m.join(""))+"}"}else d="string"===typeof a?d+((c&&":")+'"'+a.replace(/\\/g,"\\\\").replace(/\"/g,'\\"')+'"'):d+((c&&":")+a.toString());return d},innerXml:function(a){var c="",e=function(b){var a="",c;if(1===b.nodeType){a+="<"+b.nodeName;for(c=0;c<b.attributes.length;c+=1)a+=" "+b.attributes[c].nodeName+'="'+(b.attributes[c].nodeValue||
"").toString()+'"';if(b.firstChild){a+=">";for(c=b.firstChild;c;c=c.nextSibling)a+=e(c);a+="</"+b.nodeName+">"}else a+="/>"}else 3===b.nodeType?a+=b.nodeValue:4===b.nodeType&&(a+="<![CDATA["+b.nodeValue+"]]\x3e");return a};if(a.hasOwnProperty("innerHTML"))c=a.innerHTML;else for(a=a.firstChild;a;a=a.nextSibling)c+=e(a);return c},escape:function(a){return a.replace(/[\\]/g,"\\\\").replace(/[\"]/g,'\\"').replace(/[\n]/g,"\\n").replace(/[\r]/g,"\\r")},removeWhite:function(a){a.normalize();for(var c=a.firstChild,
e;c;)3===c.nodeType?c.nodeValue.match(/[^ \f\n\r\t\v]/)?c=c.nextSibling:(e=c.nextSibling,a.removeChild(c),c=e):(1===c.nodeType&&this.removeWhite(c),c=c.nextSibling);return a}}});
//# sourceMappingURL=jsonxml.map
